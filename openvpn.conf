# Use the following network for OpenVPN clients
server 172.20.0.0 255.255.240.0

# Set the appropriate level of log
# file verbosity.
#
# 0 is silent, except for fatal errors
# 4 is reasonable for general usage
# 5 and 6 can help to debug connection problems
# 9 is extremely verbose
verb 3

# SSL/TLS and Diffie hellman parms
key /etc/openvpn/pki/private/openvpn.dev.moovel-app.com.key
ca /etc/openvpn/pki/ca.crt
cert /etc/openvpn/pki/issued/openvpn.dev.moovel-app.com.crt
dh /etc/openvpn/pki/dh.pem
tls-auth /etc/openvpn/pki/ta.key

key-direction 0
keepalive 10 60
persist-key
persist-tun

# OpenVPN communication is based on UDP
proto udp

# Rely on Docker to do port mapping, internally always 1194
port 1194

# create a routed IP tunnel
dev tun0

# Output a short status file showing
# current connections, truncated
# and rewritten every minute.
status /tmp/openvpn-status.log

# Downgrade privileges after initialization (non-Windows only)
user nobody
group nogroup

# Push address of AWS DNS Server to the client
# push "dhcp-option DNS 8.8.4.4"
# push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 172.31.0.2"

# Push routes to the VPC subnets to the client
push "route 172.31.0.0 255.255.240.0"
push "route 172.31.16.0 255.255.240.0"
push "route 172.31.32.0 255.255.240.0"

